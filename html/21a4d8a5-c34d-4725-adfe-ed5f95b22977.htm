<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>执行SQL或存储过程</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="21a4d8a5-c34d-4725-adfe-ed5f95b22977" /><meta name="Description" content="有时候，开发者不想通过实体来操作数据库，而是希望通过 SQL 语句或存储过程来直接访问数据库。Rafy 也提供了一组 API 来方便实现这类需求。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="793cbe04-7265-4de9-a7d7-fb890aebc525.htm" title="领域逻辑" tocid="793cbe04-7265-4de9-a7d7-fb890aebc525">领域逻辑</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="de820b7a-0bf7-498b-89b6-3f80cf29de40.htm" title="领域控制器" tocid="de820b7a-0bf7-498b-89b6-3f80cf29de40">领域控制器</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="acc34fac-b431-4db9-a86b-83f40c812b97.htm" title="单连接事务" tocid="acc34fac-b431-4db9-a86b-83f40c812b97">单连接事务</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="21a4d8a5-c34d-4725-adfe-ed5f95b22977.htm" title="执行SQL或存储过程" tocid="21a4d8a5-c34d-4725-adfe-ed5f95b22977">执行SQL或存储过程</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="d7551c01-4f62-4e6b-8fd7-4de371df6bdf.htm" title="领域服务" tocid="d7551c01-4f62-4e6b-8fd7-4de371df6bdf">领域服务</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>执行SQL或存储过程</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>有时候，开发者不想通过实体来操作数据库，而是希望通过 SQL 语句或存储过程来直接访问数据库。Rafy 也提供了一组 API 来方便实现这类需求。</p><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#dba">IDbAccesser 接口</a></li><li class="outlineSectionEntry"><a href="#rawDBA">IRawDbAccesser 接口</a></li></ul></div><div class="collapsibleAreaRegion" id="dba"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />IDbAccesser 接口</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    为了尽量屏蔽各数据库中 SQL 语句参数的不同标识，同时也为了使开发者更简单地实现参数化的查询。Rafy 中提供了 <span class="code">IDbAccesser</span> 接口来方便开发者使用。接口定义如下：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAKACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAKACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAKACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAKACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// A db accesser which can use formatted sql to communicate with data base.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IDbAccesser : IDisposable
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// The underlying db connection</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    IDbConnection Connection { <span class="highlight-keyword">get</span>; }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 数据连接结构</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    DbConnectionSchema ConnectionSchema { <span class="highlight-keyword">get</span>; }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Gets a raw accesser which is oriented to raw sql and &lt;c&gt;IDbDataParameter&lt;/c&gt;。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    IRawDbAccesser RawAccesser { <span class="highlight-keyword">get</span>; }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Execute a sql which is not a database procudure, return rows effected.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;The number of rows effected.&lt;/returns&gt;</span>
    <span class="highlight-keyword">int</span> ExecuteText(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Execute the sql, and return the element of first row and first column, ignore the other values.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;DBNull or value object.&lt;/returns&gt;</span>
    <span class="highlight-keyword">object</span> QueryValue(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Query out some data from database.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    IDataReader QueryDataReader(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Query out some data from database.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="closeConnection"&gt;Indicates whether to close the corresponding connection when the reader is closed?&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    IDataReader QueryDataReader(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">bool</span> closeConnection, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Query out a row from database.</span>
    <span class="highlight-comment">/// If there is not any records, return null.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    DataRow QueryDataRow(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Query out a DataTable object from database by the specific sql.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    DataTable QueryDataTable(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Query out a row from database.</span>
    <span class="highlight-comment">/// If there is not any records, return null.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    LiteDataRow QueryLiteDataRow(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Query out a DataTable object from database by the specific sql.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="formattedSql"&gt;a formatted sql which format looks like the parameter of String.Format&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="parameters"&gt;If this sql has some parameters, these are its parameters.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    LiteDataTable QueryLiteDataTable(<span class="highlight-keyword">string</span> formattedSql, <span class="highlight-keyword">params</span> <span class="highlight-keyword">object</span>[] parameters);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAKACAAA");</script><p>
                    该接口使用类似于 String.Format 中的字符串格式来表达 SQL 中的参数。并在连接不同的数据库时，生成相应数据库对应的参数格式。
                </p><p>具体使用方法如下：</p><p>执行查询代码示例：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAGACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAGACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAGACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> bookRepo = RF.ResolveInstance&lt;BookRepository&gt;();
<span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> dba = DbAccesserFactory.Create(bookRepo))
{
    DataTable table = dba.QueryDataTable(<span class="highlight-literal">"SELECT * FROM Books WHERE id &gt; {0}"</span>, <span class="highlight-number">0</span>);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGACAAA");</script><p>执行非查询代码示例：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAEACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> bookRepo = RF.ResolveInstance&lt;BookRepository&gt;();
<span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> dba = DbAccesserFactory.Create(bookRepo))
{
    <span class="highlight-keyword">int</span> linesAffected = dba.ExecuteText(<span class="highlight-literal">"DELETE FROM Books WHERE id &gt; {0}"</span>, <span class="highlight-number">0</span>);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAAA");</script><p>另外，DbAccesserFactory 中也提供了不通过仓库对象，而直接使用‘数据库连接的配置名’进行构建的方法，例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> dba = DbAccesserFactory.Create(<span class="highlight-literal">"JXC"</span>))
{
    <span class="highlight-keyword">int</span> linesAffected = dba.ExecuteText(<span class="highlight-literal">"DELETE FROM Books WHERE id &gt; {0}"</span>, <span class="highlight-number">0</span>);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>参数过多时，则依次按顺序传入即可：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> dba = DbAccesserFactory.Create(bookRepo))
{
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; <span class="highlight-number">10</span>; i++)
    {
        dba.ExecuteText(
        <span class="highlight-literal">"INSERT INTO Book (Author,BookCategoryId,BookLocId,Code,Content,Name,Price,Publisher) VALUES ({0},{1},{2},{3},{4},{5},{6},{7})"</span>,
        <span class="highlight-keyword">string</span>.Empty,
        <span class="highlight-keyword">null</span>,
        <span class="highlight-keyword">null</span>,
        <span class="highlight-keyword">string</span>.Empty,
        <span class="highlight-keyword">string</span>.Empty,
        i.ToString(),
        <span class="highlight-keyword">null</span>,
        <span class="highlight-keyword">string</span>.Empty
        );
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="rawDBA"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />IRawDbAccesser 接口</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    由于 <span class="code">IDbAccesser</span> 接口封装了 SQL 语句中参数对应不同数据库中名称的变化，同时也更方便开发者使用，所以一般情况下，都推荐使用该接口。但是，<span class="code">IDbAccesser</span> 接口并不支持存储过程的调用。另外，有时开发者希望自己来构建原生的 SQL 语句和参数，这时，就需要用到 <span class="code">IRawDbAccesser</span> 接口了。（接口定义过长，这里不再贴出。）
                </p><p>
                    该接口的使用方法与 <span class="code">IDbAccesser</span> 类似，不同的地方在于 SQL 中需要传入特定数据库的参数名，并且参数需要自行构造，例如：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="复制">复制</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> dba = DbAccesserFactory.Create(bookRepo))
{
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; <span class="highlight-number">10</span>; i++)
    {
        dba.RawAccesser.ExecuteText(
            <span class="highlight-literal">"INSERT INTO Book (Author,BookCategoryId,BookLocId,Code,Content,Name,Price,Publisher,Id) VALUES ('', NULL, NULL, '', '', :p0, NULL, '', :p1)"</span>,
            dba.RawAccesser.ParameterFactory.CreateParameter(<span class="highlight-literal">"p0"</span>, i),
            dba.RawAccesser.ParameterFactory.CreateParameter(<span class="highlight-literal">"p1"</span>, i)
            );
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>
                    另外，<span class="code">IRawDbAccesser</span> 接口也可以使用存储过程了，例如：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> dba = DbAccesserFactory.Create(bookRepo))
{
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; <span class="highlight-number">10</span>; i++)
    {
        dba.RawAccesser.ExecuteProcedure(
            <span class="highlight-literal">"InsertBookProcedure"</span>,
            dba.RawAccesser.ParameterFactory.CreateParameter(<span class="highlight-literal">"p0"</span>, i),
            dba.RawAccesser.ParameterFactory.CreateParameter(<span class="highlight-literal">"p1"</span>, i)
            );
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>