<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>树型实体</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="6b1f358e-0590-4d63-8697-b0a80349c4b0" /><meta name="Description" content="树型实体，也叫自关联实体，是一种常用的层次的、树状结构的实体类型。这种实体类型的每一个对象都可以包含多个本实体类型的对象作为它的树子节点，而树子节点还可以继续包含更多的树子节点。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e9998e68-31e8-47d6-9e28-829aade5044e.htm" title="领域实体" tocid="e9998e68-31e8-47d6-9e28-829aade5044e">领域实体</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1a5cb169-0f7c-479a-a854-88cd89478b1d.htm" title="实体的状态" tocid="1a5cb169-0f7c-479a-a854-88cd89478b1d">实体的状态</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e0e55ab2-1e48-4acd-96ef-c889774bfecc.htm" title="实体关系" tocid="e0e55ab2-1e48-4acd-96ef-c889774bfecc">实体关系</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8c0065bc-f165-4c69-81f4-9c3c57bd9ab9.htm" title="实体属性" tocid="8c0065bc-f165-4c69-81f4-9c3c57bd9ab9">实体属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="640ac9bb-0090-4b38-9763-bad4fca3adfb.htm" title="领域实体关系图" tocid="640ac9bb-0090-4b38-9763-bad4fca3adfb">领域实体关系图</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="6b1f358e-0590-4d63-8697-b0a80349c4b0.htm" title="树型实体" tocid="6b1f358e-0590-4d63-8697-b0a80349c4b0">树型实体</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>树型实体</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>树型实体，也叫自关联实体，是一种常用的层次的、树状结构的实体类型。这种实体类型的每一个对象都可以包含多个本实体类型的对象作为它的树子节点，而树子节点还可以继续包含更多的树子节点。</p><p>例如，有时某种分类可以设计为树型实体，这是因为类别下可以有更小的类别，而小类下还可以有更小的类别，这种包含关系可以是无极限的。</p><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#code">如何编写树型实体</a></li><li class="outlineSectionEntry"><a href="#points">特点</a></li><li class="outlineSectionEntry"><a href="#autoCode">如何使用自动编码</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">参见</a></li></ul></div><div class="collapsibleAreaRegion" id="code"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />如何编写树型实体</span></div><div id="ID1RBSection" class="collapsibleSection"><p>对于树型实体，Rafy 框架在实体基类中已经给出了默认的实现，只需要在元数据配置中，编写以下代码即可：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> ConfigMeta()
{
    <span class="highlight-comment">//配置当前实体实树型实体</span>
    Meta.SupportTree();

    <span class="highlight-comment">//配置实体的所有属性都映射到数据表中。</span>
    Meta.MapTable().MapAllPropertiesToTable();
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="points"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />特点</span></div><div id="ID2RBSection" class="collapsibleSection"><ul><li><p>配置为树型实体后，实体的两个属性 TreeIndex、TreePId 将会在数据库中映射为同名的两个字段。（未配置时，这两个属性会被忽略。）</p></li><li><p>TreePId 属性用于存储该对象在树型关系中的父对象 Id。</p></li><li><p>TreeIndex 是树节点的系统编号，由框架自动维护。</p></li><li><p><span class="code">EntityRepository</span> 类中一些查询方法是面向树型实体的，例如查询某个节点下的所有子节点。这些功能，主要通过 TreeIndex 来做模糊匹配。所以 TreeIndex 不能被随意设置。
                        </p></li><li><p>可以通过 Entity.TreeParent 来获取或设置实体的树型父节点实体；通过 Entity.TreeChildren 来获取或设置实体的树型子节点集合。</p></li></ul></div><div class="collapsibleAreaRegion" id="autoCode"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />如何使用自动编码</span></div><div id="ID3RBSection" class="collapsibleSection"><p>默认情况下，框架为树型实体使用数字进行层次编码，例如一级节点编码为："1.","2.",...，二级节点编码为："1.1.","1.2.",...。如果期望使用其它形式的自动编码，可以使用以下代码在元数据中进行如下配置：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABABAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Meta.TreeIndexOption = <span class="highlight-keyword">new</span> TreeIndexOption
{
    Seperator = <span class="highlight-literal">'.'</span>,
    Layers = <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[][] {
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]{<span class="highlight-literal">"一"</span>, <span class="highlight-literal">"二"</span>, <span class="highlight-literal">"三"</span>, <span class="highlight-literal">"四"</span>, <span class="highlight-literal">"五"</span>, <span class="highlight-literal">"六"</span>, <span class="highlight-literal">"七"</span>, <span class="highlight-literal">"八"</span>, <span class="highlight-literal">"九"</span>},
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]{<span class="highlight-literal">"1"</span>, <span class="highlight-literal">"2"</span>, <span class="highlight-literal">"3"</span>, <span class="highlight-literal">"4"</span>, <span class="highlight-literal">"5"</span>, <span class="highlight-literal">"6"</span>, <span class="highlight-literal">"7"</span>, <span class="highlight-literal">"8"</span>, <span class="highlight-literal">"9"</span>}
    }
};</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABAAA");</script><p>上述代码使得树型实体的第一层使用汉字的数字进行编码，第二层及以下层都使用数字进行编码，层与层之间使用 '.' 进行分隔。如："一.","一.1.","一.2.","一.2.1."等。</p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />参见</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">其他资源</h4><div class="seeAlsoStyle"><a href="http://www.cnblogs.com/zgynhqf/p/4133511.html" target="_blank">Rafy 领域实体框架 - 树型实体功能（自关联表）</a></div></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>