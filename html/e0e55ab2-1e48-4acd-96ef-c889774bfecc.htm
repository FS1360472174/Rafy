<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>实体关系</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="e0e55ab2-1e48-4acd-96ef-c889774bfecc" /><meta name="Description" content="本节说明 Rafy 中实体间存在的几种关系，以及它们的使用场景。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e9998e68-31e8-47d6-9e28-829aade5044e.htm" title="领域实体" tocid="e9998e68-31e8-47d6-9e28-829aade5044e">领域实体</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1a5cb169-0f7c-479a-a854-88cd89478b1d.htm" title="实体的状态" tocid="1a5cb169-0f7c-479a-a854-88cd89478b1d">实体的状态</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="e0e55ab2-1e48-4acd-96ef-c889774bfecc.htm" title="实体关系" tocid="e0e55ab2-1e48-4acd-96ef-c889774bfecc">实体关系</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8c0065bc-f165-4c69-81f4-9c3c57bd9ab9.htm" title="实体属性" tocid="8c0065bc-f165-4c69-81f4-9c3c57bd9ab9">实体属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="640ac9bb-0090-4b38-9763-bad4fca3adfb.htm" title="领域实体关系图" tocid="640ac9bb-0090-4b38-9763-bad4fca3adfb">领域实体关系图</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6b1f358e-0590-4d63-8697-b0a80349c4b0.htm" title="树型实体" tocid="6b1f358e-0590-4d63-8697-b0a80349c4b0">树型实体</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>实体关系</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>本节说明 Rafy 中实体间存在的几种关系，以及它们的使用场景。</p><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#graph">关系图例</a></li><li class="outlineSectionEntry"><a href="#inheritance">继承</a></li><li class="outlineSectionEntry"><a href="#reference">引用关系</a></li><li class="outlineSectionEntry"><a href="#composition">组合</a></li><li class="outlineSectionEntry"><a href="#aggregation">聚合</a></li></ul></div><div class="collapsibleAreaRegion" id="graph"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />关系图例</span></div><div id="ID0RBSection" class="collapsibleSection"><p>先来看一下 Rafy 中常用的几种关系：</p><div class="mediaNear"><img alt="实体关系 All Relations" src="../media/实体关系_AllRelations.png" /></div><ul><li><p>非空引用关系：连接实线。如图中的：Creator、Replier。</p></li><li><p>可空引用关系：连接虚线。如图中的：Category。</p></li><li><p>继承关系：以空心三角结尾的连接线。例如图中 Activity 到 EJEntity 的关系。</p></li><li><p>组合关系：以实心三角结尾的连接线。如图中的：ActivityReplyList。</p></li></ul><p>有关 odml 关系图的内容，参见：<a href="640ac9bb-0090-4b38-9763-bad4fca3adfb.htm">领域实体关系图</a>。</p></div><div class="collapsibleAreaRegion" id="inheritance"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />继承</span></div><div id="ID1RBSection" class="collapsibleSection"><p>继承关系与 CLR 的继承关系一致。继承后，子实体类可获利父实体类的属性、方法。</p><p>
                    关于实体继承后的数据表映射，详见：<a href="8b3a3b78-9e6a-4558-938d-7692ae6aaa8f.htm">继承映射</a></p></div><div class="collapsibleAreaRegion" id="reference"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />引用关系</span></div><div id="ID2RBSection" class="collapsibleSection"><p>引用关系是一种常用的多对一关系。可以表示诸如：“A使用B”、“A按B分类” 等概念。</p><p>引用关系分可空引用、不可空引用。</p><p>
                    对于如果编写引用关系，参见：<a href="bae4aeb4-e6a9-4d1f-9bbd-1a4199303ba5.htm">引用属性</a>。
                </p></div><div class="collapsibleAreaRegion" id="composition"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />组合</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    组合关系是一种一对多关系，是最常用的一种主从关系。它表示一个实体类从属于另一实体类，两个实体类组合在一起，用于表示领域中一个具体的概念。
                    例如，在开发过程中，常常听说的主从表、主细表、父子表，都是这种结构。
                </p><p>
                    这种关系对应 DDD 中的聚合关系，也对应 UML 中的组合关系。Rafy 中的组合实体，也就对应着 DDD 中的聚合实体。
                </p><p>组合的特点：</p><ul><li><p>从属关系。</p></li><li><p>一个组合中的子对象，必须在组合根对象存在之后才能存在，否则没有意义。</p></li><li><p>一旦组合根对象消亡，整个组合中的所有对象必须一同消亡。</p></li></ul><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="备注" /> <b>备注：</b></th></tr><tr><td><p>到底使用聚合还是组合，设计时区分的主要原则是：如果父实体消亡时，子实体也必须消亡，那么使用组合关系，否则使用聚合关系。</p><p>但是这两种关系，在设计上并不是固定的。例如：汽车与轮胎，一般情况上是一起消亡的，所以使用组合。但是对于汽车生产企业来说，轮胎是可以先于汽车生产出来的，并可以独立存在，这时则不能使用组合。</p></td></tr></table></div><p>
                    在 Rafy 中，组合关系意味着组合父类可以获取组合子类的集合，同时组合子类可以获取其对应的组合父类的引用。
                    关系：如何编写代码来表示组合关系，参见：<a href="770d700d-acf8-40fd-abc2-a580725a14fb.htm">组合子属性</a></p></div><div class="collapsibleAreaRegion" id="aggregation"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />聚合</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
                    聚合关系是另一种一对多关系。相对于组合关系来说，聚合关系更加松散。 在 Rafy 中，这种关系并不直接被实现，而是把聚合转换为由组合和引用构成的。以下以用户与角色的关系设计为例说明。
                </p><p>用户与角色是多对多的，一个用户拥有很多角色，一个角色下也有很多的用户。 对于这两个一对多关系，在实体关系的设计上，我们需要先分辨两个实体间的依赖关系。这里，假设我们认为用户依赖角色，也就是先存在用户，才会存在角色。那么，我们认为是用户聚合了角色。UML 图如下：</p><div class="mediaNear"><img alt="实体关系 User Role Aggregation" src="../media/实体关系_User_Role_Aggregation.png" /></div><p>在 Rafy 中，我们把聚合关系实体化：</p><div class="mediaNear"><img alt="实体关系 User Role Composition" src="../media/实体关系_User_Role_Composition.png" /></div><p>用户组合了实体：UserRole，而 UserRole 非空引用了一个 Role。一旦删除用户，这个用户对应的 UserRole 组合子实体也将被删除。如果角色还被某个用户使用时，则不能删除这个角色。同时，我们可以为这个 UserRole 实体添加许多的属性，表示这个关系的属性。例如可以添加一个“添加时间”属性，用于表示为用户添加这个角色的时间。</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="备注" /> <b>备注：</b></th></tr><tr><td><p>
                        由于我们设计角色不依赖用户，所以不需要修改角色的实体结构。如果需要查找某个角色下的所有用户，则可以在角色的仓库类中添加相应的查询方法。应用层使用该方法来进行查询即可。仓库查询方法的编写，参见：<a href="59c80aec-c910-4880-b165-c3495ed5eb3e.htm">编写查询</a>。
                    </p></td></tr></table></div></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>