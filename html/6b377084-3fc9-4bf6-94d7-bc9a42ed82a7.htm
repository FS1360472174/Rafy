<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>实体仓库</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7" /><meta name="Description" content="实体仓库是领域驱动设计中的重要概念，它的作用是管理实体，持久化并保存所有实体。实体的所有状态变更，都需要保存到仓库中去，包括新加实体、删除现有实体、修改实体的状态。同时，要获取任意一个实体，也需要通过实体仓库。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7.htm" title="实体仓库" tocid="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7">实体仓库</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="019647a4-5ae0-4a43-b529-6b2d7c70b46c.htm" title="实体的创建、删除、修改" tocid="019647a4-5ae0-4a43-b529-6b2d7c70b46c">实体的创建、删除、修改</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="59c80aec-c910-4880-b165-c3495ed5eb3e.htm" title="编写查询" tocid="59c80aec-c910-4880-b165-c3495ed5eb3e">编写查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c70274b4-8afc-4bd4-82d9-6e43ae7562ee.htm" title="大批量导入实体" tocid="c70274b4-8afc-4bd4-82d9-6e43ae7562ee">大批量导入实体</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6928689f-c384-4ce0-9969-b3570fedf996.htm" title="仓库数据层（RepositoryDataProvider）" tocid="6928689f-c384-4ce0-9969-b3570fedf996">仓库数据层（RepositoryDataProvider）</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>实体仓库</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#sum">简介</a></li><li class="outlineSectionEntry"><a href="#demo">仓库类型</a></li><li class="outlineSectionEntry"><a href="#facade">仓库外观 Api</a></li></ul></div><div class="collapsibleAreaRegion" id="sum"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />简介</span></div><div id="ID0RBSection" class="collapsibleSection"><p>实体仓库是领域驱动设计中的重要概念，它的作用是管理实体，持久化并保存所有实体。实体的所有状态变更，都需要保存到仓库中去，包括新加实体、删除现有实体、修改实体的状态。同时，要获取任意一个实体，也需要通过实体仓库。</p><p>
                    关于 DDD 的概念，参考：<a href="f4f5c2f5-638a-456a-9c8d-1e1854c63002.htm">Rafy 与经典 DDD 的关系</a>。
                </p></div><div class="collapsibleAreaRegion" id="demo"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />仓库类型</span></div><div id="ID2RBSection" class="collapsibleSection"><p>仓库类型代码示例如下：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACACAAA');return false;" title="复制">复制</a></div></div><div id="ID1EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// 仓库 仓库类。</span>
<span class="highlight-comment">/// 负责 仓库 类的查询、保存。</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> WarehouseRepository : EntityRepository
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 单例模式，外界不可以直接构造本对象。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">protected</span> WarehouseRepository() { }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 此仓库存储实体对应的数据库连接配置名称。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> ConnectionStringSettingName
    {
        <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"JXC"</span>; }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACACAAA");</script><p>
                    仓库类型有以下特点：
                </p><ul><li><p>每个实体都对应一个仓库类型。</p></li><li><p>仓库类型必须遵守以下命名约定：仓库类型名称 = 实体类型名称 + "Repository"。</p></li><li><p>
                            仓库类型必须直接或间接继承自 <span class="code">EntityRepository</span> 类型。
                        </p></li><li><p>实体仓库，被设计为单例模式。</p><p>即每个实体的仓库，在整个系统中只有唯一一个运行时对象。仓库类型的构建函数不能公开，通过仓库工厂来获取仓库对象。</p></li><li><p>每个实体仓库，对应唯一一个连接字符串配置名称，需要重写 ConnectionStringSettingName 属性提供。</p><p>此配置是对应应用程序配置文件中的以下配置节名：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID1EABAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">connectionStrings</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">add</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"JXC"</span> <span class="highlight-xml-attribute-name">connectionString</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=Data\JXC.sdf"</span> <span class="highlight-xml-attribute-name">providerName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"System.Data.SqlServerCe"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">connectionStrings</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAAACAAA");</script><p>对应同一数据库的所有实体，一般需要申明一个仓库基类，在基类中重写此属性。</p></li></ul></div><div class="collapsibleAreaRegion" id="facade"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />仓库外观 Api</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    由于仓库是单例的，在整个系统运行时只会存在一个仓库的实例。所以我们需要通过仓库工厂来获取唯一的这个仓库对象。
                    <span class="code">RF</span> 类型是仓库相关的外观 Api，全称是 RepositoryFacade，其中包含了仓库工厂的 Api。（仓库外观 Api 的使用频率比较大，所以使用拼音缩写。另外，如果使用中觉得缩写不方便，框架提供了同样功能、全称的 RepositoryFacade 类型。）
                </p><p>我们可以通过该类的以下两个方法来获取指定的仓库对象：</p><ul><li><p>直接通过指定的仓库类型来获取其运行时仓库对象：</p><p>public static TRepository ResolveInstance&lt;TRepository&gt;() where TRepository : EntityRepository</p></li><li><p>通过实体类型来获取其唯一的仓库：</p><p>public static EntityRepository Find(Type entityType)</p></li></ul><p>
                    建议通过 <span class="code">ResolveInstance</span> 方法获取仓库，该方法经过优化，速度比 <span class="code">Find</span> 方法要快许多。
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABAAA');return false;" title="复制">复制</a></div></div><div id="ID1EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CarRepository carRepo = RF.ResolveInstance&lt;CarRepository&gt;();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>