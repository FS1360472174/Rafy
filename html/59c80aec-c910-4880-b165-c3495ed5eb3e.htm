<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>编写查询</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="59c80aec-c910-4880-b165-c3495ed5eb3e" /><meta name="Description" content="在仓库中编写查询" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7.htm" title="实体仓库" tocid="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7">实体仓库</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="59c80aec-c910-4880-b165-c3495ed5eb3e.htm" title="编写查询" tocid="59c80aec-c910-4880-b165-c3495ed5eb3e">编写查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b.htm" title="Linq 查询" tocid="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b">Linq 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6d65448c-b51b-4c9b-9500-f6b7a48b1188.htm" title="SqlTree 查询" tocid="6d65448c-b51b-4c9b-9500-f6b7a48b1188">SqlTree 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="02f40bcc-1ff3-4abc-b4a9-2dea57d516ce.htm" title="通用查询条件(CommonQueryCriteria)" tocid="02f40bcc-1ff3-4abc-b4a9-2dea57d516ce">通用查询条件(CommonQueryCriteria)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c2eced2c-e434-4d53-a06d-fbc518fbddf5.htm" title="Sql 查询" tocid="c2eced2c-e434-4d53-a06d-fbc518fbddf5">Sql 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ae9a2512-1528-401a-ac4f-502304a7ae03.htm" title="分页查询" tocid="ae9a2512-1528-401a-ac4f-502304a7ae03">分页查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc.htm" title="贪婪加载" tocid="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc">贪婪加载</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="56b9e7bc-2656-4bde-95dd-69e71aeafc6a.htm" title="数据行数查询" tocid="56b9e7bc-2656-4bde-95dd-69e71aeafc6a">数据行数查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="55180b16-9fda-42a1-8c4f-27d037aeae76.htm" title="表格查询" tocid="55180b16-9fda-42a1-8c4f-27d037aeae76">表格查询</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>编写查询</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p>在仓库中编写查询</p></div><div class="introduction"><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#query">查询模式</a></li><li class="outlineSectionEntry"><a href="#demo">四种查询示例</a></li><li class="outlineSectionEntry"><a href="#queryTypes">实体查询实现方式</a></li></ul></div><div class="collapsibleAreaRegion" id="query"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />查询模式</span></div><div id="ID1RBSection" class="collapsibleSection"><p>框架要求以一种统一的开发模式来编写实体仓库的查询方法，来兼顾本地应用、分布式应用程序的开发。不论在客户端，还是在服务端，都可以直接调用这种查询接口。这种开发模式如下：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABADAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> WarehouseList GetByCode(<span class="highlight-keyword">string</span> warehouseCode)
{
    <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery();
    q = q.Where(e =&gt; e.Code == warehouseCode);
    <span class="highlight-keyword">return</span> (WarehouseList)<span class="highlight-keyword">this</span>.QueryData(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABADAAA");</script><ul><li><p>必须标记为虚方法。</p><p>这是因为框架需要对仓库生成代码，并对该方法进行拦截。</p></li><li><p>方法需要标记：[RepositoryQuery]。</p><p>不是所有的虚方法都会被拦截，所以需要显式标记来区分公有数据方法。</p><p>添加此标记后的方法拥有以下的功能：</p><p>
                            1.判断是需要在本地、还是服务端来执行此方法。如果需要在服务端执行，则框架会转而调用 WCF 数据门户。（如果需要分布式调用，所有参数需要支持可序列化。）
                        </p><p>
                            2.根据方法的返回值，来确定底层查询时应该返回的类型（EntityList、Entity、int、LiteDataTable）。
                        </p><p>
                            3.查询完成后，调整查询结果的类型，与需要的类型一致。
                        </p></li><li><p>
                            返回值
                        </p><p>
                            方法的返回值只可以是以下几类，具体实体列表类型、具体的实体类型、<span class="code">int</span>（查询数据条数）、<span class="code">LiteDataTable</span>（轻量级数据表格类型）。
                        </p></li><li><p>方法体</p><p>
                            方法体中需要构造查询，并最终使用<span class="code">QueryData()</span>来查询数据。<span class="code">QueryData()</span>方法会根据当前查询方法的返回值，而决定底层需要执行的查询的类型（查全部实体、查单个实体、查数据条数），并返回相应类型的数据。
                        </p></li></ul></div><div class="collapsibleAreaRegion" id="demo"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />四种查询示例</span></div><div id="ID2RBSection" class="collapsibleSection"><p>四种查询对应枚举 <span class="code">Rafy.Domain.RepositoryQueryType</span>：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// 仓库返回数据的类型</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">enum</span> RepositoryQueryType
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 查询实体列表</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    List = <span class="highlight-number">0</span>,
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 查询单个实体</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    First = <span class="highlight-number">1</span>,
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 查询数据条数统计</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    Count = <span class="highlight-number">2</span>,
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 查询数据表格</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    Table = <span class="highlight-number">3</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABACAAA");</script><ul><li><p>查询实体列表</p><p>返回具体实体列表类型。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAADAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAADAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAADAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAADAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> WarehouseList GetByCode(<span class="highlight-keyword">string</span> warehouseCode)
{
    <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery();
    q = q.Where(e =&gt; e.Code == warehouseCode);
    <span class="highlight-keyword">return</span> (WarehouseList)<span class="highlight-keyword">this</span>.QueryData(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAADAACAAA");</script></li><li><p>查询单个实体</p><p>返回具体实体类型。</p><p>查询实体个数的数据层实现中，与查询实体列表的实体层实现保持一致。如果查询出多条实体，则框架只会返回第一个实体。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAACAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAACAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAACAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> Warehouse GetByName(<span class="highlight-keyword">string</span> name)
{
    <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery();
    q = q.Where(e =&gt; e.Name == name).OrderByDescending(e =&gt; e.CreateTime);
    <span class="highlight-keyword">return</span> (Warehouse)<span class="highlight-keyword">this</span>.QueryData(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACAACAAA");</script></li><li><p>查询实体个数</p><p>返回整型。</p><p>查询实体个数的数据层实现中，与查询实体列表的实体层实现保持一致。框架内部会自动转换为数据行数的查询。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAABAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">long</span> CountByDate(DateTime date)
{
    <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery();
    q = q.Where(e =&gt; e.CreateTime &gt;= date);
    <span class="highlight-keyword">return</span> (<span class="highlight-keyword">long</span>)<span class="highlight-keyword">this</span>.QueryData(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABAACAAA");</script></li><li><p>查询表格数据</p><p>可返回一个简单的表格类型数据。LiteDataTable 类型是一个可直接用于网络传输的数据表格。</p><p>根据 Command Query Responsibility Segregation（命令查询职责分离，简称 CQRS）模式，复杂查询一般使用表格查询，但是返回的数据只做只读查看，不支持修改。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> LiteDataTable GetTableByName(<span class="highlight-keyword">string</span> name)
{
    FormattedSql sql = <span class="highlight-literal">"SELECT * FROM WAREHOUSE WHERE NAME = {0}"</span>;
    sql.Parameters.Add(name);
    <span class="highlight-keyword">return</span> (<span class="highlight-keyword">this</span>.DataQueryer <span class="highlight-keyword">as</span> RdbDataQueryer).QueryTable(sql);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAAACAAA");</script><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="备注" /> <b>备注：</b></th></tr><tr><td><p>字符串可自动隐式转换为一个 FormattedSql 类型的对象。</p><p>FormattedSql 表格格式化的 Sql 语句，为了支持多个数据库，它其中的每一个参数都使用大括号括住的数字来代替，最终会通过 ADO.NET 来使用参数化的查询，而非使用 String.Format 简单地格式化 Sql 语句。</p></td></tr></table></div></li></ul></div><div class="collapsibleAreaRegion" id="queryTypes"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />实体查询实现方式</span></div><div id="ID3RBSection" class="collapsibleSection"><p>在数据层实现中，对于实体查询而言，目前支持以下三种查询方式：</p><ul><li><p><a href="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b.htm">Linq 查询</a></p></li><li><p><a href="02f40bcc-1ff3-4abc-b4a9-2dea57d516ce.htm">通用查询条件(CommonQueryCriteria)</a></p></li><li><p><a href="c2eced2c-e434-4d53-a06d-fbc518fbddf5.htm">Sql 查询</a></p></li></ul></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>