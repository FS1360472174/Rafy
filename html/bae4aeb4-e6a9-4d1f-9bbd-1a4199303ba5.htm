<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>引用属性</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="bae4aeb4-e6a9-4d1f-9bbd-1a4199303ba5" /><meta name="Description" content="引用关系是一种常用的多对一关系。Rafy 框架中设计了引用属性来表示这一关系。引用属性包含以下两种：一般引用、组合父引用。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e9998e68-31e8-47d6-9e28-829aade5044e.htm" title="领域实体" tocid="e9998e68-31e8-47d6-9e28-829aade5044e">领域实体</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8c0065bc-f165-4c69-81f4-9c3c57bd9ab9.htm" title="实体属性" tocid="8c0065bc-f165-4c69-81f4-9c3c57bd9ab9">实体属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3ad175ff-a917-4e84-931f-f845285187ed.htm" title="一般属性" tocid="3ad175ff-a917-4e84-931f-f845285187ed">一般属性</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="bae4aeb4-e6a9-4d1f-9bbd-1a4199303ba5.htm" title="引用属性" tocid="bae4aeb4-e6a9-4d1f-9bbd-1a4199303ba5">引用属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="770d700d-acf8-40fd-abc2-a580725a14fb.htm" title="组合子属性" tocid="770d700d-acf8-40fd-abc2-a580725a14fb">组合子属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0eaa08ea-b1fc-42c6-8d48-2ed176b945c1.htm" title="冗余属性" tocid="0eaa08ea-b1fc-42c6-8d48-2ed176b945c1">冗余属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8120fc14-ef61-43cd-99a5-21c6edd5d38b.htm" title="大数据属性" tocid="8120fc14-ef61-43cd-99a5-21c6edd5d38b">大数据属性</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="711304c2-d2a3-4ec9-abd8-00edd86fb3ca.htm" title="只读属性" tocid="711304c2-d2a3-4ec9-abd8-00edd86fb3ca">只读属性</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>引用属性</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>
                引用关系是一种常用的多对一关系。Rafy 框架中设计了引用属性来表示这一关系。引用属性包含以下两种：一般引用、组合父引用。
            </p><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#ref">一般引用</a></li><li class="outlineSectionEntry"><a href="#parentRef">组合父引用</a></li><li class="outlineSectionEntry"><a href="#lazy">懒加载</a></li><li class="outlineSectionEntry"><a href="#analysis">高级</a></li></ul></div><div class="collapsibleAreaRegion" id="ref"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />一般引用</span></div><div id="ID1RBSection" class="collapsibleSection"><p>一般引用属性可以表示诸如：“使用”、“按……分类” 等概念。包括可空引用和不可空引用两种类型。在映射数据库时，它们会分别映射为可空及不可空的外键。</p><p>以下两段代码为 Warehouse （仓库）类声明了一个名称为 Administrator（管理员）、类型为 User （用户）的可空引用属性及不可空引用属性。通过这个属性，我们可以获取或设置该仓库的管理员对象或 Id 标识。</p><ul><li><p>可空引用属性</p><p>设计为可空引用属性，表示一种弱引用关系。以下代码说明仓库可以有一个管理员，也可以没有管理员。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABAAGAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABAAGAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABAAGAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAABAAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefIdProperty AdministratorIdProperty =
    P&lt;Warehouse&gt;.RegisterRefId(e =&gt; e.AdministratorId, ReferenceType.Normal);
<span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span>? AdministratorId
{
    <span class="highlight-keyword">get</span> { (<span class="highlight-keyword">long</span>?)<span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.GetRefNullableId(AdministratorIdProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefNullableId(AdministratorIdProperty, <span class="highlight-keyword">value</span>); }
}
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefEntityProperty&lt;User&gt; AdministratorProperty =
    P&lt;Warehouse&gt;.RegisterRef(e =&gt; e.Administrator, AdministratorIdProperty);
<span class="highlight-keyword">public</span> User Administrator
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.GetRefEntity(AdministratorProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefEntity(AdministratorProperty, <span class="highlight-keyword">value</span>); }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABAAGAAA");</script></li><li><p>不可空引用属性</p><p>设计为不可空引用属性，表示一种必须存在的引用关系。以下代码说明仓库必须有一个管理员进行管理。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAAGAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAAGAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAAGAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAAAAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefIdProperty AdministratorIdProperty =
    P&lt;Warehouse&gt;.RegisterRefId(e =&gt; e.AdministratorId, ReferenceType.Normal);
<span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span> AdministratorId
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> (<span class="highlight-keyword">long</span>)<span class="highlight-keyword">this</span>.GetRefId(AdministratorIdProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefId(AdministratorIdProperty, <span class="highlight-keyword">value</span>); }
}
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefEntityProperty&lt;User&gt; AdministratorProperty =
    P&lt;Warehouse&gt;.RegisterRef(e =&gt; e.Administrator, AdministratorIdProperty);
<span class="highlight-keyword">public</span> User Administrator
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.GetRefEntity(AdministratorProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefEntity(AdministratorProperty, <span class="highlight-keyword">value</span>); }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAAGAAA");</script></li></ul></div><div class="collapsibleAreaRegion" id="parentRef"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />组合父引用</span></div><div id="ID2RBSection" class="collapsibleSection"><p>在领域模型的设计中，组合是非常重要的关系。组合子类可以通过组合父引用属性获取其对应的组合父的对象或 Id 标识。</p><p>以下代码为 Wheel （车轮）类声明了一个名称为 Car（车）、类型为 Car 的组合父引用属性。通过 Car 属性，每一个车轮都可以获取其所属的小车。</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABAFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAFAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABAFAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefIdProperty CarIdProperty =
    P&lt;Wheel&gt;.RegisterRefId(e =&gt; e.CarId, ReferenceType.Parent);
<span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span> CarId
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> (<span class="highlight-keyword">long</span>)<span class="highlight-keyword">this</span>.GetRefId(CarIdProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefId(CarIdProperty, <span class="highlight-keyword">value</span>); }
}
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefEntityProperty&lt;Car&gt; CarProperty =
    P&lt;Wheel&gt;.RegisterRef(e =&gt; e.Car, CarIdProperty);
<span class="highlight-keyword">public</span> Car Car
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.GetRefEntity(CarProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefEntity(CarProperty, <span class="highlight-keyword">value</span>); }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAFAAA");</script><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="备注" /> <b>备注：</b></th></tr><tr><td><p>组合父引用属性都是不可空的引用属性。</p><p>
                        一般情况下，我们只是去获取组合父引用属性对应的对象，不直接通过设置这个属性来组合父对象。要改变父子关系，一般通过组合子属性表示的集合来改变。相关内容，参见：<a href="770d700d-acf8-40fd-abc2-a580725a14fb.htm">组合子属性</a></p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="lazy"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />懒加载</span></div><div id="ID3RBSection" class="collapsibleSection"><p>引用实体属性的值是被设计为懒加载的。在获取属性的值时，如果实体还没有加载，则框架会根据 Id 属性的值，从引用实体的仓库中中查询出相应的实体，并存储到引用实体属性中。</p><p>调用仓库的方法是 GetById。</p></div><div class="collapsibleAreaRegion" id="analysis"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />高级</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
                    从上面的代码可以看出，不论是一般引用属性还是组合父引用属性，都同时包含两个托管属性：一个引用 Id 属性、一个引用实体属性。由于它们都是托管属性，所以都支持托管属性的三种属性逻辑扩展：属性设置前回调、属性设置后回调、更换属性获取逻辑，详情见：<a href="3ad175ff-a917-4e84-931f-f845285187ed.htm">一般属性</a></p><ul><li><p>引用 Id 属性</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABBAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABBAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABBAADAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABBAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefIdProperty AdministratorIdProperty =
    P&lt;Warehouse&gt;.RegisterRefId(e =&gt; e.AdministratorId, ReferenceType.Normal);
<span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span>? AdministratorId
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> (<span class="highlight-keyword">long</span>?)<span class="highlight-keyword">this</span>.GetRefNullableId(AdministratorIdProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefNullableId(AdministratorIdProperty, <span class="highlight-keyword">value</span>); }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABBAADAAA");</script><p>Id 属性是引用属性的值的关键。数据传输、数据库映射时，都是以直接操作 Id 属性来完成的。</p></li><li><p>引用实体属性</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACAAADAAA');return false;" title="复制">复制</a></div></div><div id="ID0EACAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> RefEntityProperty&lt;User&gt; AdministratorProperty =
    P&lt;Warehouse&gt;.RegisterRef(e =&gt; e.Administrator, AdministratorIdProperty);
<span class="highlight-keyword">public</span> User Administrator
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.GetRefEntity(AdministratorProperty); }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetRefEntity(AdministratorProperty, <span class="highlight-keyword">value</span>); }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAAADAAA");</script><p>引用实体属性依赖于引用 Id 属性，在使用 Register 方法注册引用实体属性时，需要同时指定它对应的引用 Id 属性。</p><p>引用 Id 属性与引用实体属性的值是完全关联的。设置引用实体时，引用 Id 属性也会同时变更为该实体的 Id。而设置 Id 则，则会清空引用实体属性的值，当再次获取引用实体属性值时，会懒加载出对应的实体。</p></li></ul></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>