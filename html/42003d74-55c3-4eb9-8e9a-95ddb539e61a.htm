<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>实体查询扩展（仓库扩展）</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="42003d74-55c3-4eb9-8e9a-95ddb539e61a" /><meta name="Description" content="本节讲解如何在客户化插件中，为产品插件内的实体仓库添加扩展新的查询。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6299ee13-40f8-41c7-b3d4-ed2542f00cc1.htm" title="插件级扩展" tocid="6299ee13-40f8-41c7-b3d4-ed2542f00cc1">插件级扩展</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5a705045-b57e-46ab-be03-18183495d690.htm" title="实体属性扩展" tocid="5a705045-b57e-46ab-be03-18183495d690">实体属性扩展</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7fc0bd92-4063-4d8f-b9dc-8be2889f4a50.htm" title="实体配置扩展" tocid="7fc0bd92-4063-4d8f-b9dc-8be2889f4a50">实体配置扩展</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="42003d74-55c3-4eb9-8e9a-95ddb539e61a.htm" title="实体查询扩展（仓库扩展）" tocid="42003d74-55c3-4eb9-8e9a-95ddb539e61a">实体查询扩展（仓库扩展）</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7e890df0-d93b-424d-8bc1-e6fc939160f3.htm" title="实体保存逻辑扩展（仓库数据层）" tocid="7e890df0-d93b-424d-8bc1-e6fc939160f3">实体保存逻辑扩展（仓库数据层）</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="be2a2e90-87f1-4390-aabb-b3ad82561cfa.htm" title="领域逻辑扩展（领域控制器）" tocid="be2a2e90-87f1-4390-aabb-b3ad82561cfa">领域逻辑扩展（领域控制器）</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>实体查询扩展（仓库扩展）</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>
                本节讲解如何在客户化插件中，为产品插件内的实体仓库添加扩展新的查询。
            </p><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#senarios">场景</a></li><li class="outlineSectionEntry"><a href="#addNew">添加新查询</a></li><li class="outlineSectionEntry"><a href="#howToUse">如何使用</a></li><li class="outlineSectionEntry"><a href="#replaceExists">替换现有的查询</a></li></ul></div><div class="collapsibleAreaRegion" id="senarios"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />场景</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
                    当领域工程的产品插件开发并打包完成后，产品插件中实体对应的实体仓库自带的查询并不能满足所有的应用场景。这时，应用工程的开发团队往往需要为这些实体仓库添加新的查询。
                </p></div><div class="collapsibleAreaRegion" id="addNew"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />添加新查询</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    下面代码示例如何在新的插件中，为 <span class="code">TransactionRepository</span> 类型添加新查询：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAEADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEADAAA');return false;" title="复制">复制</a></div></div><div id="ID1EAEADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// 查询扩展示例。</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> TransactionRepositoryExt : EntityRepositoryExt&lt;TransactionRepository&gt;
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 获取所有通过 EnterpriseTransaction 自动导入的交易。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    [RepositoryQuery]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> TransactionList GetAutoImported()
    {
        <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery&lt;Transaction&gt;();
        q = q.Where(e =&gt; e.EnterpriseTransactionId != <span class="highlight-keyword">null</span>);
        <span class="highlight-keyword">return</span> (TransactionList)<span class="highlight-keyword">this</span>.QueryData(q);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEADAAA");</script><p>
                    上述查询代码，与在实体仓库（<span class="code">EntityRepository</span>）中编写查询是基本一致的。唯一不同在于 <span class="code">EntityRepository</span> 中使用的是 <span class="code">this.CreateLinqQuery()</span> 来创建查询，而 <span class="code">EntityRepositoryExt</span> 中则需要使用 <span class="code">this.CreateLinqQuery&lt;Transaction&gt;()</span> 方法来明确指定当前仓库对应的实体。
                </p><p>
                    另外，当新的查询需要使用新的 <a href="5a705045-b57e-46ab-be03-18183495d690.htm">扩展属性</a> 来进行查询时，需要使用 <a href="6d65448c-b51b-4c9b-9500-f6b7a48b1188.htm">SqlTree 查询</a> 来进行查询。
                </p><p>
                    下面代码示例如何在 <span class="code">EntityRepositoryExt</span> 中编写此类查询：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAADAAA');return false;" title="复制">复制</a></div></div><div id="ID1EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> TransactionRepositoryExt : EntityRepositoryExt&lt;TransactionRepository&gt;
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 要使用扩展属性来查询（通过使用 SqlTree 查询）。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="branchName"&gt;&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;&lt;/returns&gt;</span>
    [RepositoryQuery]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> TransactionList GetByBrachName(<span class="highlight-keyword">string</span> branchName)
    {
        <span class="highlight-keyword">var</span> f = QueryFactory.Instance;

        <span class="highlight-keyword">var</span> t = f.Table&lt;Transaction&gt;();
        <span class="highlight-keyword">var</span> et = f.Table&lt;EnterpriseTransaction&gt;();

        <span class="highlight-keyword">var</span> q = f.Query(
            selection: t.Star(),
            <span class="highlight-keyword">from</span>: t.Join(et),
            <span class="highlight-keyword">where</span>: et.Column(EnterpriseTransactionExt.BranchNameProperty).Equal(branchName)
        );
        <span class="highlight-keyword">return</span> (TransactionList)<span class="highlight-keyword">this</span>.QueryData(q);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="howToUse"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />如何使用</span></div><div id="ID3RBSection" class="collapsibleSection"><p>仓库扩展的使用方法如下：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID1EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> repo = RF.ResolveInstance&lt;TransactionRepository&gt;();
<span class="highlight-keyword">var</span> list = repo.Extension&lt;TransactionRepositoryExt&gt;().GetAutoImported();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="replaceExists"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />替换现有的查询</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
                    替换现有查询时，需要在客户化插件中定义新的 <span class="code">RepositoryDataProvider</span>，并将其替换对应仓库已有的数据层。编写方法与产品插件一致，不同点在于新的 <span class="code">RepositoryDataProvider</span> 应该从产品的 <span class="code">RepositoryDataProvider</span> 上继承。
                </p><p>
                    关于 <span class="code">RepositoryDataProvider</span> 的具体内容，见：<a href="6928689f-c384-4ce0-9969-b3570fedf996.htm">仓库数据层（RepositoryDataProvider）</a>。
                </p><p>示例代码：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABAAA');return false;" title="复制">复制</a></div></div><div id="ID1EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[DataProviderFor(<span class="highlight-keyword">typeof</span>(TransactionRepository))]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> TransactionRepositoryDataProviderExt : TransactionRepositoryDataProvider
{
    <span class="highlight-comment">//由于此方法是编写在 TransactionRepository 中，所以直接编写同签名的方法即可直接重用。</span>
    <span class="highlight-keyword">public</span> TransactionList GetByTransactionCriteria(TransactionCriteria criteria)
    {
        <span class="highlight-comment">//...</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>