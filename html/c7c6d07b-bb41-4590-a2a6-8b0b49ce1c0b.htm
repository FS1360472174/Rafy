<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Linq 查询</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b" /><meta name="Description" content="Linq 查询是数据层查询中最简单易用的查询，一般情况下，都推荐使用这种查询。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7.htm" title="实体仓库" tocid="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7">实体仓库</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="59c80aec-c910-4880-b165-c3495ed5eb3e.htm" title="编写查询" tocid="59c80aec-c910-4880-b165-c3495ed5eb3e">编写查询</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b.htm" title="Linq 查询" tocid="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b">Linq 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6d65448c-b51b-4c9b-9500-f6b7a48b1188.htm" title="SqlTree 查询" tocid="6d65448c-b51b-4c9b-9500-f6b7a48b1188">SqlTree 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="02f40bcc-1ff3-4abc-b4a9-2dea57d516ce.htm" title="通用查询条件(CommonQueryCriteria)" tocid="02f40bcc-1ff3-4abc-b4a9-2dea57d516ce">通用查询条件(CommonQueryCriteria)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c2eced2c-e434-4d53-a06d-fbc518fbddf5.htm" title="Sql 查询" tocid="c2eced2c-e434-4d53-a06d-fbc518fbddf5">Sql 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ae9a2512-1528-401a-ac4f-502304a7ae03.htm" title="分页查询" tocid="ae9a2512-1528-401a-ac4f-502304a7ae03">分页查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc.htm" title="贪婪加载" tocid="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc">贪婪加载</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="56b9e7bc-2656-4bde-95dd-69e71aeafc6a.htm" title="数据行数查询" tocid="56b9e7bc-2656-4bde-95dd-69e71aeafc6a">数据行数查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="55180b16-9fda-42a1-8c4f-27d037aeae76.htm" title="表格查询" tocid="55180b16-9fda-42a1-8c4f-27d037aeae76">表格查询</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="点击或拖拽改变大小" title="点击或拖拽改变大小" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Linq 查询</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>Linq 查询是数据层查询中最简单易用的查询，一般情况下，都推荐使用这种查询。</p><p>本页包含以下内容：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#demo">代码示例</a></li><li class="outlineSectionEntry"><a href="#op">支持的操作符</a></li><li class="outlineSectionEntry"><a href="#sni">代码生成</a></li></ul></div><div class="collapsibleAreaRegion" id="demo"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />代码示例</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACADAAA');return false;" title="复制">复制</a></div></div><div id="ID0EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> WarehouseList GetByCode(<span class="highlight-keyword">string</span> warehouseCode, <span class="highlight-keyword">string</span> nameKeywords, PagingInfo pagingInfo)
{
    <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery();

    <span class="highlight-comment">//条件对比</span>
    q = q.Where(e =&gt; e.Code == warehouseCode);
    <span class="highlight-keyword">if</span> (!<span class="highlight-keyword">string</span>.IsNullOrEmpty(nameKeywords))
    {
        q = q.Where(e =&gt; e.Name.Contains(nameKeywords));
    }

    <span class="highlight-comment">//排序</span>
    q = q.OrderByDescending(w =&gt; w.Name);

    <span class="highlight-keyword">return</span> (WarehouseList)<span class="highlight-keyword">this</span>.QueryData(q, pagingInfo);<span class="highlight-comment">//以指定的分页信息 pagingInfo 分页</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACADAAA");</script><p>上面的代码使用 Linq 查询实现了一个较复杂的查询示例。Linq 查询中可使用属性对比，排序，分页等。</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="备注" /> <b>备注：</b></th></tr><tr><td><p><span class="code">PagingInfo</span> 是 Rafy 中为分布设计的一个类型。详情见：<a href="ae9a2512-1528-401a-ac4f-502304a7ae03.htm">分页查询</a></p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="op"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />支持的操作符</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Rafy 并不支持所有的 Linq 标准查询。可以使用的 Linq 标准查询方法如下：</p><div class="tableSection"><table><tr><th><p>方法名</p></th><th><p>所属类型</p></th><th><p>备注</p></th></tr><tr><td><p>Where</p></td><td><p>System.Linq.Queryable</p></td><td><p>添加 Where 条件约束。</p></td></tr><tr><td><p>OrderBy</p></td><td><p>System.Linq.Queryable</p></td><td><p>按照指定属性正序排列。</p></td></tr><tr><td><p>OrderByDescending</p></td><td><p>System.Linq.Queryable</p></td><td><p>按照指定属性倒序排列。</p></td></tr><tr><td><p>ThenBy</p></td><td><p>System.Linq.Queryable</p></td><td><p>再次，按照指定属性正序排列。</p></td></tr><tr><td><p>ThenByDescending</p></td><td><p>System.Linq.Queryable</p></td><td><p>再次，按照指定属性倒序排列。</p></td></tr><tr><td><p>Count</p></td><td><p>System.Linq.Queryable</p></td><td><p>直接返回 Linq 查询对应的行数。</p></td></tr></table></div><p>
                    而 <span class="code">Where</span> 方法中，对实体的属性进行条件对比时：
                </p><ul><li><p>
                            支持以下双目操作符：<span class="code">=、!=、&gt;、&gt;=、&lt;、&lt;=</span>。
                        </p></li><li><p>
                            支持单目操作符：<span class="code">!</span>。
                        </p></li><li><p>
                            支持两个属性条件间的连接条件：<span class="code">&amp;&amp;、||</span>。例如：
                        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAACAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAACAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAACAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(e =&gt; e.Code == warehouseCode &amp;&amp; e.Name.Contains(nameKeywords) || e.Id &gt; <span class="highlight-number">100</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACAACAAA");</script></li><li><p>
                            支持引用查询。即间接使用引用实体的属性来进行查询。例如：
                        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACBAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACBAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACBAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EACBAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(warehouse =&gt; warehouse.Administrator.Name == <span class="highlight-literal">"admin"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACBAACAAA");</script><p>以上代码将会过滤出所有管理员名称是 "admin" 的仓库。</p><p>在生成 Sql 语句时，将会生成 INNER JOIN 语句，连接上这些被使用的引用实体对应的表。</p></li><li><p>支持在属性对比条件中，使用以下方法对属性进行比较：</p><div class="tableSection"><table><tr><th><p>方法名</p></th><th><p>所属类型</p></th><th><p>备注</p></th></tr><tr><td><p>Contains</p></td><td><p>System.String</p></td><td><p>判断指定属性是否包含指定字符串。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAHAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAHAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAHAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAAHAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(e =&gt; e.Name.Contains(nameKeywords));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAHAAAACAAA");</script></td></tr><tr><td><p>StartsWith</p></td><td><p>System.String</p></td><td><p>判断指定属性是否以指定字符串开头。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAGAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAGAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAGAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAAGAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(e =&gt; e.Name.StartsWith(nameKeywords));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAGAAAACAAA");</script></td></tr><tr><td><p>EndsWith</p></td><td><p>System.String</p></td><td><p>判断指定属性是否以指定字符串结尾。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAFAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAFAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAFAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAAFAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(e =&gt; e.Name.EndsWith(nameKeywords));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAFAAAACAAA");</script></td></tr><tr><td><p>IsNullOrEmpty</p></td><td><p>System.String</p></td><td><p>判断指定属性是否为空字符串。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAEAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAEAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAAEAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(e =&gt; !<span class="highlight-keyword">string</span>.IsNullOrEmpty(e.Name));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEAAAACAAA");</script></td></tr><tr><td><p>Contains</p></td><td><p>System.Linq.Enumerable</p></td><td><p>判断指定属性的值是否在指定的列表中。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAADAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">int</span>[] values = <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span> };
q = q.Where(e =&gt; values.Contains(e.Id));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAAACAAA");</script></td></tr><tr><td><p>Contains</p></td><td><p>System.Collections.Generic.List&lt;T&gt;</p></td><td><p>判断指定属性的值是否在指定的列表中。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAACAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAACAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">List&lt;<span class="highlight-keyword">int</span>&gt; values = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">int</span>&gt; { <span class="highlight-number">1</span>, <span class="highlight-number">2</span> };
q = q.Where(e =&gt; values.Contains(e.Id));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAAAACAAA");</script></td></tr><tr><td><p>Any</p></td><td><p>Rafy.Domain.EntityList</p></td><td><p>用于判断某个实体的聚合子实体中是否存在一个实体满足某个条件，在使用前，需要使用 Cast&lt;T&gt; 方法把非泛型的 EntityList 转换为具体实体的集合类型 IEnumerable&lt;T&gt;。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAABAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(book =&gt; book.ChapterList.Cast&lt;Chapter&gt;().Any(c =&gt; c.Name == chapterName));
q = q.Where(book =&gt; book.ChapterList.Concrete().Any(c =&gt; c.SectionList.Cast&lt;Section&gt;().Any(s =&gt; s.Name.Contains(sectionName))));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAAACAAA");</script></td></tr><tr><td><p>All</p></td><td><p>Rafy.Domain.EntityList</p></td><td><p>用于判断某个实体的聚合子实体中是否所有实体满足某个条件，在使用前，需要使用 Cast&lt;T&gt; 方法把非泛型的 EntityList 转换为具体实体的集合类型 IEnumerable&lt;T&gt;。例如：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAAAAACAAA');return false;" title="复制">复制</a></div></div><div id="ID0EAAAAAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">q = q.Where(book =&gt; book.ChapterList.Cast&lt;Chapter&gt;().All(c =&gt; c.Name == chapterName));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAAAAACAAA");</script></td></tr></table></div></li></ul></div><div class="collapsibleAreaRegion" id="sni"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />代码生成</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    框架为常用的 Linq 查询提供了代码段生成，使用 <span class="code">RafyQuery</span> 即可生成相应代码段：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABABAAA');return false;" title="复制">复制</a></div></div><div id="ID0EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[RepositoryQuery]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> $EntityListName$ $MethodName$($Parameters$)
{
    <span class="highlight-keyword">var</span> q = <span class="highlight-keyword">this</span>.CreateLinqQuery();
    q = q.Where(e =&gt; e.$WhereExpression$);$end$
    <span class="highlight-keyword">return</span> ($EntityListName$)<span class="highlight-keyword">this</span>.QueryData(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABAAA");</script><p>
                    详见：<a href="6b3e8163-8516-4065-91f5-194491334343.htm">代码段</a>。
                </p></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>